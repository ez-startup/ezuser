"""
Django settings for iam project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
load_dotenv()
import os
from django.utils.translation import gettext_lazy as _ 

APP_NAME = 'User Manager'
CSRF_COOKIE_SECURE=False
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG")

# Django Tailwind Document https://django-tailwind.readthedocs.io/en/latest/installation.html
TAILWIND_APP_NAME = 'style'
NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"
ALLOWED_HOSTS = ['*']
INTERNAL_IPS = [
    "127.0.0.1",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth', # User
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    "django_celery_beat",
    # Apps 
    'usermanager',
    'productmanager',
    # Django Libraries
    'corsheaders',
    'rosetta',
    # Third party libraries
    'oauth2_provider',
    'tailwind',
    'style',
    'django_browser_reload',
    
]

MIDDLEWARE = [
    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware', # OAuth2 token
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware', # Localization
    "django_browser_reload.middleware.BrowserReloadMiddleware", # Browser reload auto reload
]


# CACHES 
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.filebased.FileBasedCache",
        "LOCATION": os.path.join(BASE_DIR, "cache"),
    }
}
ROSETTA_STORAGE_CLASS = 'rosetta.storage.CacheRosettaStorage',

ROOT_URLCONF = 'iam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iam.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Customer authentication
AUTHENTICATION_BACKENDS = [
    
    'oauth2_provider.backends.OAuth2Backend',
    'iam.authentication.CustomAuthenticationBackend',
    # 'django.contrib.auth.backends.ModelBackend',
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
      'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

# Communication
DEFAULT_FROM_EMAIL='webmaster@localhost'
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = os.environ.get("TZ")
USE_I18N = True
USE_TZ = True

LANGUAGE_CODE = 'en'
LANGUAGES = (
    ('en', _('English')),
    ('kh', _('Khmer')),
)
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files (User uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# GeoIP2 files
GEOIP_PATH = os.path.join(BASE_DIR, 'geoip', 'database')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'usermanager.user'

# OAUTH2 authentication
OAUTH2_PROVIDER = {
    'RESOURCE_SERVER_INTROSPECTION_URL': 'http://localhost:8000/auth/introspect/',
    'RESOURCE_SERVER_INTROSPECTION_CREDENTIALS': (os.environ.get('rs-id'),os.environ.get('rs-secret')),
    'SCOPES_BACKEND_CLASS': 'oauth2_provider.scopes.SettingsScopes',
    'ALLOWED_REDIRECT_URI_SCHEMES': ['http', 'https'],
    'SCOPES': {
        'read': 'Read access to data',
        'write': 'Write access to data',
        'profile': 'Access user profile information',
        'introspection': 'Introspect token scope',
        'groups': 'Access to your groups'
    },
    
}

# LOGIN 
LOGIN_URL='/admin/login/' # Authentication of Oauth2

# OPENID authentication
OAUTH2_PROVIDER_APPLICATION_MODEL='usermanager.AuthApplication'
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False
CORS_ALLOW_METHODS = (
    "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"
)


# ALLOWED_HOSTS = ["localhost", "127.0.0.1",'*']
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8001",
    "http://localhost:8000",
    "http://127.0.0.1:8001",
]
